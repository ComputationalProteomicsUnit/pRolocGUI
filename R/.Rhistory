library(pRoloc)
library(pRolocdata)
data("hyperLOPIT2015")
plot2D(hyperLOPIT2015)
plot2D(hyperLOPIT2015, grid = FALSE)
q("no")
q("no")
getwd)
getwd()
q("no")
library(pRolocGUI)
library(pRolocdata)
data("Barylyuk2020ToxoLopit")
pRolocVis(Barylyuk2020ToxoLopit)
source('~/.active-rstudio-document')
library(shiny)
ui <- shinyUI(fluidPage(
titlePanel("Old Faithful Geyser Data"),
fluidRow(
column(2,
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30),
style="overflow-x: scroll; overflow-y: scroll"),
column(8,
plotOutput("distPlot")),
column(2,
textInput("test", "Test"),
style="overflow-x: scroll; overflow-y: scroll")
)
))
server <- shinyServer(function(input, output) {
output$distPlot <- renderPlot({
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
})
shinyApp(ui = ui, server = server)
getwd()
setwd("pRolocGUI")
setwd("R/")
source('~/cambridge/dev/pRolocGUI/R/utils.R')
data("Barylyuk2020ToxoLopit")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
library(DT)
library(colorspace)
library(colourpicker)
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "t-SNE")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "t-SNE")
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
getwd()
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
?titlePanel
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
?titlePanel
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "PCA")
data("hyperLOPIT2015ms3r1")
data("hyperLOPIT2015ms3r2")
xx <- MSnSetList(list(hyperLOPIT2015ms3r1, hyperLOPIT2015ms3r2))
dim(hyperLOPIT2015ms3r1)
dim(hyperLOPIT2015ms3r2)
fvarLabels(hyperLOPIT2015ms3r1)
fvarLabels(hyperLOPIT2015ms3r2)
fvarLabels(hyperLOPIT2015ms3r2)
fvarLabels(hyperLOPIT2015ms3r2)[6]
fvarLabels(hyperLOPIT2015ms3r2)[6] <- "markers_rep2"
fvarLabels(hyperLOPIT2015ms3r1)[6] <- "markers_rep1"
fvarLabels(hyperLOPIT2015ms3r2)
fvarLabels(hyperLOPIT2015ms3r1)
fcol1 = "markers_rep1"
fcol2 = "markers_rep2"
object <- xx
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx)
source('~/cambridge/dev/pRolocGUI/R/zzz.R')
source('~/cambridge/dev/pRolocGUI/R/utils.R')
pRolocVis_compare(xx)
?plot2D
plot2D
plot2D(Barylyuk2020ToxoLopit, method = "none")
plot2D(Barylyuk2020ToxoLopit, method = none)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "yyy")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "yyy")
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "none")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "none")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, method = "none")
p = pRolocVis_pca(Barylyuk2020ToxoLopit)
p
p <- plot2D(Barylyuk2020ToxoLopit)
pRolocVis_pca(p, method = "none", methargs = list(Barylyuk2020ToxoLopit))
p = pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = "pp")
fcol <- "nullmarkers"
m <- matrix(0, ncol = 1, nrow = nrow(Barylyuk2020ToxoLopit))
rownames(m) <- featureNames(Barylyuk2020ToxoLopit)
colnames(m) <- "0"
fData(Barylyuk2020ToxoLopit)[, fcol] <- m
tail(fvarLabels(Barylyuk2020ToxoLopit))
plot2D(Barylyuk2020ToxoLopit, "nullmarkera")
plot2D(Barylyuk2020ToxoLopit, "nullmarkers")
fData(Barylyuk2020ToxoLopit)[, fcol] <- "unknown"
plot2D(Barylyuk2020ToxoLopit, "nullmarkers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = "p")
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = "p")
mrkVecToMat(Barylyuk2020ToxoLopit, "nullmarkers", mfcol = "tmp")
t = mrkVecToMat(Barylyuk2020ToxoLopit, "nullmarkers", mfcol = "tmp")
class(t)
pmarkers <- fData(t, "tmp")
pmarkers <- fData(t)[, "tmp"]
dim(pmarkers)
fvarLabels(t)
class(fData(t)$nullmarkers)
class(fData(t)$tmp)
fData(t)$tmp
dim(fData(t)$tmp)
class(fData(t)$tmp)
mName <- paste0("Markers", format(Sys.time(), "%a%b%d%H%M%S%Y"))
Barylyuk2020ToxoLopit <- mrkVecToMat(Barylyuk2020ToxoLopit, "markers", mfcol = mName)
pmarkers <- fData(Barylyuk2020ToxoLopit)[, mName]
dim(pmarkers)
head(pmarkers)
matrix(0, ncol = 1, nrow = nrow(object))
matrix(0, ncol = 1, nrow = nrow(Barylyuk2020ToxoLopit))
m = matrix(0, ncol = 1, nrow = nrow(Barylyuk2020ToxoLopit))
rownames(m) <- featureNames(Barylyuk2020ToxoLopit)
colnames(m) <- "0"
pmarkers <- m
head(m)
dim(m)
rep("unknown", nrow(Barylyuk2020ToxoLopit))
length(rep("unknown", nrow(Barylyuk2020ToxoLopit)))
dim(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = "p")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = "p")
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
head(pmarkers)
colnames(pmarkers) <- "unknown"
col_ids <-  paste0("col", seq(colnames(pmarkers)))
col_ids
colPicker <- function(x) {colourInput(col_ids[x], colnames(pmarkers)[x],
value = getStockcol()[x])}
col_input <- lapply(seq(col_ids), colPicker)
ll <- length(col_input)
colPicker
col_input
ll
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
pRolocVis_pca(Barylyuk2020ToxoLopit)
data(iris)
cats <- levels(iris$Species)
## colourInput ---- create list of shiny inputs for UI
ids <-  paste0("col", seq(3))
cols <- c("red", "blue", "yellow")
foo <- function(x) {colourInput(ids[x], cats[x], cols[x])}
my_input <- lapply(seq(ids), foo)
## css styling for selectizeInput menu
CSS <- function(values, colors){
template <- "
.option[data-value=%s], .item[data-value=%s]{
background: %s !important;
color: white !important;
}"
paste0(
apply(cbind(values, colors), 1, function(vc){
sprintf(template, vc[1], vc[1], vc[2])
}),
collapse = "\n"
)
}
css <- CSS(cats, cols[seq(cats)])
## ------ shiny app ------
runApp(shinyApp(
ui = fluidPage(
tabsetPanel(type = "tabs",
tabPanel("Dataset", id = "data",
tags$head(
tags$style(HTML(css))
),
selectizeInput("species", "Labels",
choices = cats,
multiple = TRUE,
selected = cats),
plotOutput("scatter")
),
tabPanel("Colour Menu", id = "colmenu",
my_input)
)
),
server = function(input, output, session) {
## get coords according to selectizeInput
mrkSel <- reactive({
lapply(input$species,
function(z) which(iris$Species == z))
})
## colours selected by user in colourPicker
cols_user <- reactive({
sapply(ids, function(z) input[[z]])
})
## update scatter colours
scattercols <- reactive({
cols_user()[sapply(input$species, function(z)
which(cats == z))]
})
## scatter plot is conditional on species selected
output$scatter <- renderPlot({
plot(iris$Petal.Length, iris$Petal.Width, pch=21)
if (!is.null(input$species)) {
for (i in 1:length(input$species)) {
points(iris$Petal.Length[mrkSel()[[i]]], iris$Petal.Width[mrkSel()[[i]]],
pch = 19, col = scattercols()[i])
}
}
})
}
)
)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
pRolocVis_pca(Barylyuk2020ToxoLopit, fcol = NULL)
?splitLayout
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
?column
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(Barylyuk2020ToxoLopit)
pRolocVis_pca(hyperLOPIT2015ms3r1)
data("hyperLOPIT2015")
pRolocVis_pca(hyperLOPIT2015)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015)
q("no")
getwd()
library(pRolocdata)
library(pRoloc)
library(DT)
library(colourpicker)
library(colorspace)
data("hyperLOPIT2015ms3r1")
data("hyperLOPIT2015ms3r2")
xx <- MSnSetList(list(hyperLOPIT2015ms3r1, hyperLOPIT2015ms3r2))
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/zzz.R')
source('~/cambridge/dev/pRolocGUI/R/utils.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
library(shiny)
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare2.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare2.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare2.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
.plot
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/utils.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
getwd()
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare2.R')
pRolocVis_compare2(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/utils.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_pca.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_pca(hyperLOPIT2015ms3r1)
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "markers", fcol2= "markers")
load("~/cambridge/dev/lopit-shinyapps/Golgins_Mito/mito.rda", verbose = TRUE)
load("~/cambridge/dev/lopit-shinyapps/Golgins_golgin97mito/golgin97mito.rda, verbose = TRUE)
load("~/cambridge/dev/lopit-shinyapps/Golgins_golgin97mito/golgin97mito.rda", verbose = TRUE)
mito
plot2D(mito)
plot2D(mito, method = "t-SNE")
fvarLabels(mito)
set.seed(1)
plot2D(mito, method = "t-SNE", fcol = "svm.pred.golgin97mito_Triplicate")
load("~/cambridge/dev/lopit-shinyapps/Golgins_golgin97mito/golgin97mito-mod.rda", verbose = TRUE)
golgin97mito
plot2D(golgin97mito, method = "t-SNE", fcol = "svm.pred.golgin97mito_Triplicate")
load("~/cambridge/dev/lopit-shinyapps/Golgins_golgin97mito/golgin97mito.rda, verbose = TRUE)
load("~/cambridge/dev/lopit-shinyapps/Golgins_golgin97mito/golgin97mito.rda", verbose = TRUE)
set.seed(1)
grep("svm.pred.", fvarLabels(golgin97mito))
grep("svm.pred.", fvarLabels(golgin97mito), value = TRUE)
grep("svm.pred.", fvarLabels(mito), value = TRUE)
xx <- MSnSetList(list(mito, golgin97mito))
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate")
source('~/cambridge/dev/pRolocGUI/R/pRolocVis_compare.R')
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate")
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate", remap = TRUE)
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate", remap = TRUE)
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate", remap = FALSE)
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate", remap = FALSE, method = "t-SNE")
pRolocVis_compare(xx, fcol1 = "svm.pred.Mito_Triplicate", fcol2 = "svm.pred.golgin97mito_Triplicate", remap = FALSE, method = "t-SNE")
q("no")
